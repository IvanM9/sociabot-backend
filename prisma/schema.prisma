// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id   String @id @default(cuid())
  firstName String
  lastName  String
  email      String @unique
  password   String
  birthDate DateTime @db.Date
  createdAt DateTime @db.Timestamptz() @default(now())
  role       String @default("STUDENT") // STUDENT, TEACHER

  courses Course[]
  studentCourses Course_Student[]

  @@map("users")
}

model Lesson {
  id         String   @id @default(cuid())
  courseStudent Course_Student @relation(fields: [courseStudentId], references: [id])
  courseStudentId String
  score            Int
  date             DateTime @db.Timestamptz()
  observations     String @db.Text
  module          Module @relation(fields: [moduleId], references: [id])
  moduleId        String

  @@map("lessons")
}

model Module {
  id     String   @id @default(cuid())
  name         String
  goals        String
  createdBy   String
  updatedBy   String
  createdAt   DateTime @default(now()) @db.Timestamptz()
  updatedAt   DateTime @db.Timestamptz()
  course      Course @relation(fields: [courseId], references: [id])
  courseId    String

  lessons Lesson[]
  chats Chat[]

  @@map("modules")
}

model Chat {
  id         String   @id @default(cuid())
  date             DateTime
  courseStudent Course_Student @relation(fields: [courseStudentId], references: [id])
  courseStudentId String
  observations     String @db.Text
  updatedBy       String
  createdAt       DateTime @default(now()) @db.Timestamptz()
  updatedAt       DateTime @db.Timestamptz()
  createdBy       String
  module          Module @relation(fields: [moduleId], references: [id])
  moduleId        String

  interactions Interaction[]

  @@map("chats")
}

model Interaction {
  id String @id @default(cuid())
  user     String @default("STUDENT") // STUDENT, BOT
  message  String @db.Text
  date     DateTime
  chat    Chat @relation(fields: [chatId], references: [id])
  chatId  String

  @@map("interactions")
}

model Course {
  id   String  @id @default(cuid())
  name       String
  description String
  teacher    User @relation(fields: [createdBy], references: [id])
  createdBy String
  updatedBy String
  createdAt DateTime @db.Timestamptz() @default(now())
  updatedAt DateTime @db.Timestamptz()

  modules Module[]
  students Course_Student[]

  @@map("courses")
}

model Course_Student {
  id   String  @id @default(cuid())
  course Course @relation(fields: [courseId], references: [id])
  courseId  String
  student User @relation(fields: [studentId], references: [id])
  studentId String
  createdBy String
  updatedBy String
  createdAt DateTime @db.Timestamptz() @default(now())
  updatedAt DateTime @db.Timestamptz()

  lessons Lesson[]
  chats Chat[]

  @@map("course_students")
}
